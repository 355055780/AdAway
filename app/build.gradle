apply plugin: 'com.android.application'

def keyStoreDefined = project.hasProperty('signingStoreLocation') &&
        project.hasProperty('signingStorePassword') &&
        project.hasProperty('signingKeyAlias') &&
        project.hasProperty('signingKeyPassword')

repositories {
    maven {
        url 'https://jitpack.io'
    }
}

android {
    compileSdkVersion 28
    buildToolsVersion '29.0.1'
    defaultConfig {
        minSdkVersion 26
        targetSdkVersion 28
        versionCode 50000   // Read x.yy.zz to match version name
        versionName '5.0.0'

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }

    /*
     * To sign release build, create file gradle.properties in ~/.gradle/ with this content:
     *
     * signingStoreLocation=/home/key.store
     * signingStorePassword=xxx
     * signingKeyAlias=alias
     * signingKeyPassword=xxx
     */
    if (keyStoreDefined) {
        println "Found signature properties in gradle.properties. Build will be signed."

        signingConfigs {
            release {
                storeFile file(signingStoreLocation)
                storePassword signingStorePassword
                keyAlias signingKeyAlias
                keyPassword signingKeyPassword
            }
        }

        buildTypes.debug.signingConfig = signingConfigs.release
        buildTypes.release.signingConfig = signingConfigs.release
    }

    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }

    // Do not abort build if lint finds errors
    lintOptions {
        disable 'MissingTranslation'
    }

    buildTypes {
//        debug {
//            shrinkResources false
//            minifyEnabled false
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//        }
        release {
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    def appcompat_version = '1.1.0-rc01'
    def card_view_version = '1.0.0'
    def constraint_layout_version = '1.1.3'
    def fragment_version = '1.1.0-rc01'
    def libsu_version = '2.5.0'
    def lifecycle_version = '2.0.0'
    def material_version = '1.1.0-alpha08'
    def preference_version = '1.1.0-rc01'
    def recycler_view_version = '1.1.0-beta01'
    def room_version = '2.1.0'
    def work_version = '2.1.0'

    // Native modules
//    implementation project(':tcpdump')
//    implementation project(':webserver')

    // AndroidX components
    implementation "androidx.appcompat:appcompat:${appcompat_version}"
    implementation "androidx.cardview:cardview:${card_view_version}"
    implementation "androidx.constraintlayout:constraintlayout:${constraint_layout_version}"
    implementation "androidx.fragment:fragment:${fragment_version}"
    implementation "androidx.lifecycle:lifecycle-extensions:${lifecycle_version}"
    implementation "androidx.lifecycle:lifecycle-common-java8:${lifecycle_version}"
    implementation "androidx.preference:preference:${preference_version}"
    implementation "androidx.recyclerview:recyclerview:${recycler_view_version}"
    implementation "androidx.room:room-runtime:${room_version}"
    annotationProcessor "androidx.room:room-compiler:${room_version}"
    implementation "androidx.work:work-runtime:${work_version}"
    implementation "com.google.android.material:material:${material_version}"

    // Miscellaneous
    api 'com.google.guava:guava:27.0.1-android' // TODO Check if still used?
    implementation 'com.annimon:stream:1.2.1'
    implementation 'com.google.android:flexbox:1.1.0'   // TODO To remove with the old home screen
    implementation 'com.squareup.okhttp3:okhttp:3.14.1'
    implementation 'net.sf.trove4j:trove4j:3.0.3'
    implementation 'org.sufficientlysecure:html-textview:3.4'
    if (keyStoreDefined) {
        implementation project(':sentrystub')
    } else {
        implementation 'io.sentry:sentry-android:1.7.14'
    }
    implementation 'org.slf4j:slf4j-nop:1.7.25' // TODO Check if still used?

    // Root related
    implementation "com.github.topjohnwu.libsu:core:${libsu_version}"
    implementation "com.github.topjohnwu.libsu:io:${libsu_version}"

    // VPN related
    implementation 'org.pcap4j:pcap4j-core:1.7.5'
    implementation 'org.pcap4j:pcap4j-packetfactory-static:1.7.5'
    implementation 'dnsjava:dnsjava:2.1.8'

    // Test related
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.json:json:20180130'
}
